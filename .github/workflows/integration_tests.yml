name: Build and run Unit and Integration Tests

on:
  push:
    branches:
      - olan/integration-pipeline
  workflow_dispatch:

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ user, information, payment, game, notification ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Load Environment Variables
        run: |
          if [ "${{ matrix.service }}" = "user" ]; then
            echo "${{ secrets.USER_SERVICE_ENV }}" > .env
          elif [ "${{ matrix.service }}" = "payment" ]; then
            echo "${{ secrets.PAYMENT_SERVICE_ENV }}" > .env
          elif [ "${{ matrix.service }}" = "game" ]; then
            echo "${{ secrets.GAME_SERVICE_ENV }}" > .env
          elif [ "${{ matrix.service }}" = "notification" ]; then
            echo "${{ secrets.NOTIFICATION_SERVICE_ENV }}" > .env
          elif [ "${{ matrix.service }}" = "information" ]; then
            echo "${{ secrets.INFORMATION_SERVICE_ENV }}" > .env
          fi

      - name: Run Unit Tests
        run: |
          mvn clean test --file "${{ matrix.service }}-service/pom.xml" -Punit-tests

  integration-tests:
    runs-on: ubuntu-latest
    needs: unit-tests

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Run Integration Tests
        run: |
          mvn verify -Pintegration-tests --file user-service/pom.xml

name: Build and run Unit tests on Services

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        service: [ user, information, payment, game, notification ]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Java version
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'microsoft'

      - name: Load Environment Variables
        run: |
          # Map service to its corresponding secret and write to .env file
          if [ "${{ matrix.service }}" = "user" ]; then
            echo "${{ secrets.USER_SERVICE_ENV }}" > user.env
          elif [ "${{ matrix.service }}" = "payment" ]; then
            echo "${{ secrets.PAYMENT_SERVICE_ENV }}" > .env
           elif [ "${{ matrix.service }}" = "payment" ]; then
            echo "${{ secrets.GAME_SERVICE_ENV }}" > .env
           elif [ "${{ matrix.service }}" = "payment" ]; then
            echo "${{ secrets.NOTIFICATION_SERVICE_ENV }}" > .env
           elif [ "${{ matrix.service }}" = "payment" ]; then
            echo "${{ secrets.INFORMATION_SERVICE_ENV }}" > .env
          fi
      

      - name: Set-up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Run Integration Tests (if -Pintegration-tests exists)
        run: |
          if mvn help:active-profiles -P integration-tests | grep "integration-tests"; then
            mvn clean verify --file "${{ matrix.service }}-service/pom.xml" -Pintegration-tests
          else
            echo "Integration tests profile (-Pintegration-tests) not found. Skipping."
          fi

      - name: Build with Maven
        run: |
          mvn clean
          mvn -B package --file pom.xml
#      - name: build docker image
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: Dockerfile
#          push: false
#          tags: ${{secrets.DOCKER_HUB_USERNAME }}/rest-api:latest
#
#      - name: login to docker hub
#        uses: docker/login-action@v1
#        with:
#          username: ${{secrets.DOCKER_HUB_USERNAME }}
#          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN }}
#
#      - name: push image to docker hub
#        uses: docker/build-push-action@v4
#        with:
#          context: .
#          file: Dockerfile
#          push: true
#          tags: ${{secrets.DOCKER_HUB_USERNAME }}/rest-api:latest

